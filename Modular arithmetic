// binary exponentiation
ll powmod(ll a, ll b) {
    ll ret = 1;
    while(b){
    	if(b&1) ret = ret * a % M;
    	a = a * a % M;
    	b/=2;
    }
    return ret;
}

// Combinatorics n C k -> modular inverse with fermat's little theorem
ll C(ll a, ll b) {
    if(a < b) return 0;
    return (((fact[a] * powmod(fact[b], M - 2)) % M) * powmod(fact[a - b], M - 2)) % M;
}
