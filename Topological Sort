const int MAXN = 1e5;
vvi adj(MAXN);
vi ts;
bool visited[MAXN];

void predefine()
{
	memset(visited, false, sizeof visited);
	ts.clear();
	L(i, 0, MAXN) adj[i].clear();
}

void dfs(int u){
	visited[u] = true;
	L(i, 0, sz(adj[u]))
	{
		int v = adj[u][i];
		if(!visited[v]) dfs(v);
	}
	ts.pb(u);
}

void solve()
{
	predefine();
	// input
	L(i, 1, v+1) // v  = num of vertex
		if(!visited[i]) dfs(i);
	reverse(all(ts));
	// output
}
